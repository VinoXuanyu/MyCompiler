VAR 0-N
PUSH 10007
VAR 0-const_diag_matrix
PUSH 3
PUSH 3
DIMVAR 0-const_diag_matrix, 2
PUSH 1
PUSH 0
PUSH 0
PUSH 0
PUSH 1
PUSH 0
PUSH 0
PUSH 0
PUSH 1
VAR 0-const_d_matrix
PUSH 3
VAR 0-const_base
PUSH 3
DIMVAR 0-const_base, 1
PUSH 1
PUSH 0
PUSH 0
VAR 0-const_a
PUSH 1
VAR 0-const_b
PUSH 2
VAR 0-const_c
PUSH 3
VAR 0-const_d
PUSH 4
VAR 0-diag_matrix
PUSH 3
PUSH 3
DIMVAR 0-diag_matrix, 2
PUSH 1
PUSH 0
PUSH 0
PUSH 0
PUSH 1
PUSH 0
PUSH 0
PUSH 0
PUSH 1
VAR 0-d_matrix
PUSH 3
VAR 0-base
PUSH 3
DIMVAR 0-base, 1
PUSH 1
PUSH 0
PUSH 0
VAR 0-matrix_A
PUSH 10
PUSH 10
DIMVAR 0-matrix_A, 2
PLACEHOLDER 0-matrix_A, 2
VAR 0-matrix_B
PUSH 10
PUSH 10
DIMVAR 0-matrix_B, 2
PLACEHOLDER 0-matrix_B, 2
FUNC @print_id:
PARA 1-id, 0
PUSH 1-id
VALUE 1-id, 0
PRINT "%d
"
label_if_1: 
PUSH 0
JZ label_cond_0_5
PUSH 4
PUSH 5
CGT 
AND 
label_cond_0_5: 
JZ label_else_2
label_if_block_4: 
RET 0
JMP label_if_end_3
label_else_2: 
label_if_end_3: 
RET 0
ENDFUNC 
FUNC @print_matrix:
PUSH 10
PARA 2-matrix, 2
VAR 2-i
PUSH 0
VAR 2-j
PLACEHOLDER 2-j, 0
label_while_6: 
PUSH 2-i
VALUE 2-i, 0
PUSH 10
CLT 
label_cond_0_9: 
JZ label_while_end_7
label_while_block_8: 
PUSH 2-j
ADDRESS 2-j, 0
PUSH 0
POP 2-j
label_while_10: 
PUSH 2-j
VALUE 2-j, 0
PUSH 10
CLT 
label_cond_0_13: 
JZ label_while_end_11
label_while_block_12: 
label_if_14: 
PUSH 2-j
VALUE 2-j, 0
PUSH 10
PUSH 1
SUB 
CEQ 
label_cond_0_18: 
JZ label_else_15
label_if_block_17: 
PUSH 2-matrix
PUSH 2-i
VALUE 2-i, 0
PUSH 2-j
VALUE 2-j, 0
VALUE 2-matrix, 0
PRINT "%d"
JMP label_if_end_16
label_else_15: 
PUSH 2-matrix
PUSH 2-i
VALUE 2-i, 0
PUSH 2-j
VALUE 2-j, 0
VALUE 2-matrix, 0
PRINT "%d "
label_if_end_16: 
PUSH 2-j
ADDRESS 2-j, 0
PUSH 2-j
VALUE 2-j, 0
PUSH 1
ADD 
POP 2-j
JMP label_while_10
label_while_end_11: 
PRINT "
"
PUSH 2-i
ADDRESS 2-i, 0
PUSH 2-i
VALUE 2-i, 0
PUSH 1
ADD 
POP 2-i
JMP label_while_6
label_while_end_7: 
RET 0
ENDFUNC 
FUNC @create_double_matrix:
PUSH 10
PARA 5-matrix_A, 2
PUSH 10
PARA 5-matrix_B, 2
PARA 5-x, 0
PARA 5-y, 0
VAR 5-i
PUSH 0
VAR 5-j
PLACEHOLDER 5-j, 0
label_while_19: 
PUSH 5-i
VALUE 5-i, 0
PUSH 10
CLT 
label_cond_0_22: 
JZ label_while_end_20
label_while_block_21: 
PUSH 5-j
ADDRESS 5-j, 0
PUSH 0
POP 5-j
label_while_23: 
PUSH 5-j
VALUE 5-j, 0
PUSH 10
CLT 
label_cond_0_26: 
JZ label_while_end_24
label_while_block_25: 
PUSH 5-matrix_A
PUSH 5-i
VALUE 5-i, 0
PUSH 5-j
VALUE 5-j, 0
ADDRESS 5-matrix_A, 0
PUSH 5-i
VALUE 5-i, 0
PUSH 1
ADD 
PUSH 5-x
VALUE 5-x, 0
ADD 
POP 5-matrix_A
PUSH 5-matrix_B
PUSH 5-i
VALUE 5-i, 0
PUSH 5-j
VALUE 5-j, 0
ADDRESS 5-matrix_B, 0
PUSH 5-j
VALUE 5-j, 0
PUSH 1
ADD 
PUSH 5-y
VALUE 5-y, 0
ADD 
POP 5-matrix_B
PUSH 5-j
ADDRESS 5-j, 0
PUSH 5-j
VALUE 5-j, 0
PUSH 1
ADD 
POP 5-j
JMP label_while_23
label_while_end_24: 
PUSH 5-i
ADDRESS 5-i, 0
PUSH 5-i
VALUE 5-i, 0
PUSH 1
ADD 
POP 5-i
JMP label_while_19
label_while_end_20: 
RET 0
ENDFUNC 
FUNC @sum_matrix:
PUSH 10
PARA 8-matrix, 2
VAR 8-i
PUSH 0
VAR 8-j
PLACEHOLDER 8-j, 0
VAR 8-k
PLACEHOLDER 8-k, 0
VAR 8-res
PUSH 0
label_while_27: 
PUSH 8-i
VALUE 8-i, 0
PUSH 10
CLT 
label_cond_0_30: 
JZ label_while_end_28
label_while_block_29: 
PUSH 8-j
ADDRESS 8-j, 0
PUSH 0
POP 8-j
label_while_31: 
PUSH 8-j
VALUE 8-j, 0
PUSH 10
CLT 
label_cond_0_34: 
JZ label_while_end_32
label_while_block_33: 
PUSH 8-res
ADDRESS 8-res, 0
PUSH 8-res
VALUE 8-res, 0
PUSH 8-matrix
PUSH 8-i
VALUE 8-i, 0
PUSH 8-j
VALUE 8-j, 0
VALUE 8-matrix, 0
ADD 
POP 8-res
PUSH 8-j
ADDRESS 8-j, 0
PUSH 8-j
VALUE 8-j, 0
PUSH 1
ADD 
POP 8-j
JMP label_while_31
label_while_end_32: 
PUSH 8-i
ADDRESS 8-i, 0
PUSH 8-i
VALUE 8-i, 0
PUSH 1
ADD 
POP 8-i
JMP label_while_27
label_while_end_28: 
PUSH 8-res
VALUE 8-res, 0
RET 1
RET 0
ENDFUNC 
FUNC @multi_double_matrix:
PUSH 10
PARA 11-matrix_A, 2
PUSH 10
PARA 11-matrix_B, 2
VAR 11-matrix_C
PUSH 10
PUSH 10
DIMVAR 11-matrix_C, 2
PLACEHOLDER 11-matrix_C, 2
VAR 11-i
PUSH 0
VAR 11-j
PLACEHOLDER 11-j, 0
VAR 11-k
PLACEHOLDER 11-k, 0
label_while_35: 
PUSH 11-i
VALUE 11-i, 0
PUSH 10
CLT 
label_cond_0_38: 
JZ label_while_end_36
label_while_block_37: 
PUSH 11-j
ADDRESS 11-j, 0
PUSH 0
POP 11-j
label_while_39: 
PUSH 11-j
VALUE 11-j, 0
PUSH 10
CLT 
label_cond_0_42: 
JZ label_while_end_40
label_while_block_41: 
PUSH 11-k
ADDRESS 11-k, 0
PUSH 0
POP 11-k
PUSH 11-matrix_C
PUSH 11-i
VALUE 11-i, 0
PUSH 11-j
VALUE 11-j, 0
ADDRESS 11-matrix_C, 0
PUSH 0
POP 11-matrix_C
label_while_43: 
PUSH 11-k
VALUE 11-k, 0
PUSH 10
CLT 
label_cond_0_46: 
JZ label_while_end_44
label_while_block_45: 
PUSH 11-matrix_C
PUSH 11-i
VALUE 11-i, 0
PUSH 11-j
VALUE 11-j, 0
ADDRESS 11-matrix_C, 0
PUSH 11-matrix_C
PUSH 11-i
VALUE 11-i, 0
PUSH 11-j
VALUE 11-j, 0
VALUE 11-matrix_C, 0
PUSH 11-matrix_A
PUSH 11-i
VALUE 11-i, 0
PUSH 11-k
VALUE 11-k, 0
VALUE 11-matrix_A, 0
PUSH 11-matrix_B
PUSH 11-k
VALUE 11-k, 0
PUSH 11-j
VALUE 11-j, 0
VALUE 11-matrix_B, 0
MUL 
ADD 
POP 11-matrix_C
PUSH 11-k
ADDRESS 11-k, 0
PUSH 11-k
VALUE 11-k, 0
PUSH 1
ADD 
POP 11-k
JMP label_while_43
label_while_end_44: 
PUSH 11-j
ADDRESS 11-j, 0
PUSH 11-j
VALUE 11-j, 0
PUSH 1
ADD 
POP 11-j
JMP label_while_39
label_while_end_40: 
PUSH 11-i
ADDRESS 11-i, 0
PUSH 11-i
VALUE 11-i, 0
PUSH 1
ADD 
POP 11-i
JMP label_while_35
label_while_end_36: 
PUSH 11-matrix_C
ADDRESS 11-matrix_C, 2
RPARA 2
$sum_matrix
RET 1
RET 0
ENDFUNC 
FUNC @vdot:
PARA 15-x, 1
PARA 15-y, 1
VAR 15-d
PUSH 0
VAR 15-sum
PUSH 0
label_while_47: 
PUSH 1
label_cond_0_50: 
JNZ label_while_block_49
PUSH 0
label_cond_1_51: 
OR 
JZ label_while_end_48
label_while_block_49: 
PUSH 15-sum
ADDRESS 15-sum, 0
PUSH 15-sum
VALUE 15-sum, 0
PUSH 15-x
PUSH 15-d
VALUE 15-d, 0
VALUE 15-x, 0
PUSH 15-y
PUSH 15-d
VALUE 15-d, 0
VALUE 15-y, 0
MUL 
PUSH 1
DIV 
ADD 
POP 15-sum
PUSH 15-d
ADDRESS 15-d, 0
PUSH 15-d
VALUE 15-d, 0
PUSH 1
ADD 
POP 15-d
label_if_52: 
PUSH 15-d
VALUE 15-d, 0
PUSH 0-const_d_matrix
VALUE 0-const_d_matrix, 0
CEQ 
label_cond_0_56: 
JNZ label_if_block_55
PUSH 0
JZ label_cond_1_57
PUSH 15-sum
VALUE 15-sum, 0
NEG 
NOT 
PUSH 7
PUSH 1
ADD 
CLT 
AND 
label_cond_1_57: 
OR 
JNZ label_if_block_55
PUSH 15-sum
VALUE 15-sum, 0
POS 
PUSH 8
PUSH 1
SUB 
CGT 
label_cond_2_58: 
OR 
JZ label_else_53
label_if_block_55: 
JMP label_while_end_48
JMP label_if_end_54
label_else_53: 
label_if_59: 
PUSH 1
label_cond_0_63: 
JZ label_else_60
label_if_block_62: 
JMP label_while_47
JMP label_if_end_61
label_else_60: 
label_if_end_61: 
label_if_end_54: 
JMP label_while_47
label_while_end_48: 
PUSH 15-sum
VALUE 15-sum, 0
RET 1
RET 0
ENDFUNC 
FUNC @print_vec:
PARA 17-v, 1
PUSH 17-v
PUSH 0
VALUE 17-v, 0
PUSH 17-v
PUSH 1
VALUE 17-v, 0
PUSH 17-v
PUSH 2
VALUE 17-v, 0
PRINT "%d %d %d
"
RET 0
ENDFUNC 
FUNC @print_solve_math_problem:
PRINT "Let us solve math problem
"
RET 0
ENDFUNC 
FUNC @empty_block:
RET 0
ENDFUNC 
FUNC @solve_math_problem:
PARA 21-x, 0
PARA 21-y, 0
VAR 21-tmp
PLACEHOLDER 21-tmp, 0
$print_solve_math_problem
$empty_block
label_if_64: 
PUSH 21-x
VALUE 21-x, 0
PUSH 21-y
VALUE 21-y, 0
CEQ 
label_cond_0_68: 
JZ label_else_65
label_if_block_67: 
PRINT "x not equal to y
"
RET 0
JMP label_if_end_66
label_else_65: 
label_if_69: 
PUSH 21-x
VALUE 21-x, 0
PUSH 21-y
VALUE 21-y, 0
CNE 
label_cond_0_73: 
JZ label_else_70
label_if_block_72: 
PRINT "x is not equal to y and "
label_if_74: 
PUSH 21-x
VALUE 21-x, 0
PUSH 21-y
VALUE 21-y, 0
CGE 
label_cond_0_78: 
JZ label_else_75
label_if_block_77: 
PUSH 21-tmp
ADDRESS 21-tmp, 0
PUSH 21-x
VALUE 21-x, 0
PUSH 21-y
VALUE 21-y, 0
SUB 
POP 21-tmp
PUSH 21-tmp
VALUE 21-tmp, 0
PRINT "x is %d more than y
"
JMP label_if_end_76
label_else_75: 
label_if_end_76: 
label_if_79: 
PUSH 21-x
VALUE 21-x, 0
PUSH 21-y
VALUE 21-y, 0
CLE 
label_cond_0_83: 
JZ label_else_80
label_if_block_82: 
PUSH 21-tmp
ADDRESS 21-tmp, 0
PUSH 21-y
VALUE 21-y, 0
PUSH 21-x
VALUE 21-x, 0
SUB 
POP 21-tmp
PUSH 21-tmp
VALUE 21-tmp, 0
PRINT "y is %d more than x
"
JMP label_if_end_81
label_else_80: 
label_if_end_81: 
JMP label_if_end_71
label_else_70: 
label_if_end_71: 
label_if_end_66: 
RET 0
RET 0
ENDFUNC 
MAIN main
VAR 27-N
PUSH 3
VAR 27-v
PUSH 3
DIMVAR 27-v, 1
PLACEHOLDER 27-v, 1
VAR 27-i
PUSH 0
label_while_84: 
PUSH 27-i
VALUE 27-i, 0
PUSH 27-N
VALUE 27-N, 0
CLT 
label_cond_0_87: 
JZ label_while_end_85
label_while_block_86: 
PUSH 27-v
PUSH 27-i
VALUE 27-i, 0
ADDRESS 27-v, 0
GETINT 
POP 27-v
PUSH 27-i
ADDRESS 27-i, 0
PUSH 27-i
VALUE 27-i, 0
PUSH 1
ADD 
POP 27-i
JMP label_while_84
label_while_end_85: 
label_if_88: 
PUSH 0
NOT 
JZ label_cond_0_92
PUSH 0
AND 
label_cond_0_92: 
JNZ label_if_block_91
PUSH 1
label_cond_1_93: 
OR 
JZ label_else_89
label_if_block_91: 
PUSH 20373623
RPARA 0
$print_id
JMP label_if_end_90
label_else_89: 
label_if_end_90: 
PUSH 0-matrix_A
ADDRESS 0-matrix_A, 2
RPARA 2
PUSH 0-matrix_B
ADDRESS 0-matrix_B, 2
RPARA 2
PUSH 0
RPARA 0
PUSH 0
RPARA 0
$create_double_matrix
PRINT "
"
PUSH 0-matrix_A
ADDRESS 0-matrix_A, 2
RPARA 2
$print_matrix
PRINT "
"
PUSH 0-matrix_B
ADDRESS 0-matrix_B, 2
RPARA 2
$print_matrix
VAR 28-res
PUSH 1
PUSH 1
PUSH 1
DIV 
PUSH 1
MUL 
ADD 
PUSH 2
MOD 
PUSH 1
POS 
SUB 
PUSH 1
NEG 
POS 
SUB 
PUSH 28-res
ADDRESS 28-res, 0
PUSH 0-matrix_A
ADDRESS 0-matrix_A, 2
RPARA 2
PUSH 0-matrix_B
ADDRESS 0-matrix_B, 2
RPARA 2
$multi_double_matrix
POP 28-res
PUSH 28-res
VALUE 28-res, 0
PRINT "%d
"
PUSH 27-i
ADDRESS 27-i, 0
PUSH 0
POP 27-i
label_while_94: 
PUSH 27-i
VALUE 27-i, 0
PUSH 27-N
VALUE 27-N, 0
CLT 
label_cond_0_97: 
JZ label_while_end_95
label_while_block_96: 
VAR 29-res
PUSH 0
PUSH 29-res
ADDRESS 29-res, 0
PUSH 27-v
ADDRESS 27-v, 1
RPARA 1
PUSH 0-diag_matrix
PUSH 27-i
VALUE 27-i, 0
ADDRESS 0-diag_matrix, 1
RPARA 1
$vdot
POP 29-res
PUSH 29-res
VALUE 29-res, 0
PRINT "%d
"
PUSH 27-i
ADDRESS 27-i, 0
PUSH 27-i
VALUE 27-i, 0
PUSH 1
ADD 
POP 27-i
JMP label_while_94
label_while_end_95: 
PUSH 100
RPARA 0
PUSH 100
RPARA 0
$solve_math_problem
PUSH 200
RPARA 0
PUSH 100
RPARA 0
$solve_math_problem
PUSH 100
RPARA 0
PUSH 300
RPARA 0
$solve_math_problem
PUSH 0
RET 1
EXIT 
